import React, { Component } from 'react';
import Comment from './Comment';

class App extends Component {

    newId
    newPosted
    newBody
    newTitle

    constructor() {
        super();

        this.state = {
            flag: true,
            dataCards: [
                {
                    id: 1, posted: "Ramya",
                    body: "Java is a basic",
                    title: "Java",
                    comments: [
                        {
                            id: 100,
                            txt: "U have to read",
                            commentedBy: "Jay"
                        },
                        {
                            id: 101,
                            txt: "Okay",
                            commentedBy: "Deep"
                        }
                    ]
                },
                {
                    id: 2, posted: "Hari",
                    body: "The life of pi",
                    title: " Awesome",
                    comments: [
                        {
                            id: 102,
                            txt: "super",
                            commentedBy: "Sai"
                        },
                        {
                            id: 103,
                            txt: "nice",
                            commentedBy: "Niharika"
                        }
                    ]
                }
            ]
        }
    }

    getCards() {
        const dataCards = this.state.dataCards.map(
            (card, index) =>
                <div className="card mb-2" key={card.id}>
                    <div className="card-body">
                        <div className="d-flex justify-content-between">
                            <h5 className="card-title text-warning font-weight-bold">
                                {card.title}
                            </h5>
                            <button type="button" className="btn btn-link " onClick={() => this.deleteCard(index)}>
                                <i className="far fa-times-circle text-danger">
                                </i>
                            </button>
                        </div>
                        <hr></hr>
                        <p className="card-text font-italic">{card.body}</p>
                        <footer className="blockquote-footer text-muted text-right"><cite title="Source Title">{card.posted}</cite></footer>

                        <Comment comments={card.comments} postId={card.id} handleDeleteComment={(list,index) => this.handleDeleteComment(card.comments,index)} />

                    </div>
                </div>
        )
        return dataCards
    }

    addCard() {
        var card = {
            posted: this.newPosted.value,
            body: this.newBody.value,
            title: this.newTitle.value,
            comments: []
        }
        var list = this.state.dataCards

        list.push(card)
        this.setState({
            dataCards: list, flag: true
        })

        this.newPosted.value = ''
        this.newBody.value = ''
        this.newTitle.value = ''
    }

    deleteCard(index) {
        var list = this.state.dataCards
        list.splice(index, 1)
        this.setState({
            details: list
        })
    }
    handleDeleteComment(comments, postId) {
        var posts = this.state.dataCards

        posts.forEach(post => {
            if (post.postId === postId)
                post.comments = comments
        })

        this.setState({ dataCards: posts })
    }

    buttonCondition() {
        this.setState({
            flag: (this.newPosted.value === '' || this.newBody.value === '' || this.newTitle.value === '') ? true : false
        })

    }

    render() {
        return (
            <div className="container">
                <div className="jumbotron py-3 my-4">
                    <p className="display-4 text-center mb-0">Bulletin Board</p>

                </div>
                <div className=" form-group mt-2 mb-2">

                    <div className="form-group">
                        <label>Title</label>
                        <input type="text" className="form-control mb-3" placeholder="Title" id="title"
                            ref={(input) => this.newTitle = input} onInput={() => this.buttonCondition()} />

                        <label>Body</label>
                        <textarea className="form-control mb-3" id="body" rows="3" ref={(input) => this.newBody = input} onInput={() => this.buttonCondition()} placeholder="Body"></textarea>

                        <label>Posted By</label>
                        <input type="text" className="form-control mb-3" id="postby" placeholder="Posted by"
                            ref={(input) => this.newPosted = input} onInput={() => this.buttonCondition()} />

                        <button className="btn btn-primary" onClick={() => this.addCard()} disabled={this.state.flag}>
                            Add Post
</button>
                        <hr />
                    </div>
                    {this.getCards()}
                </div>
            </div>
        );
    }
}

export default App;
-----------------------------------------------------------
comment.js

import React, { Component } from 'react';

class Comment extends Component {

    getComments() {
        const commentsList = this.props.comments.map(
            (comment, index) =>
                <li className="list-group-item" key={comment.id}>
                    <span className="text-primary lead">{comment.commentedBy}</span>: {comment.txt}
                    <button className="btn btn-danger" onClick={() => this.del(index)}>del</button>
                </li>
        )
        return commentsList
    }

    del(index) {
        var list = this.props.comments
        list.splice(index, 1)
        this.props.handleDeleteComment(list)
    }



    render() {
        return (
            <div>
                 <button className="btn btn-link pl-0" data-toggle="collapse" data-target={"#collapseComments" + this.props.postId} aria-expanded="false" aria-controls={"collapseComments" + this.props.postId}>
                    view Comments</button>

                <div className="collapse" id={"collapseComments" + this.props.postId}>
                    {
                        (this.props.comments.length === 0) ?
                        <div className="alert alert-warning" role="alert">
                        No comments yet!
                     </div> :
                    
                    <ul className="list-group">
                        {this.getComments()
                        }
                    </ul>
    } 
                </div>
                    
            </div>
        )
    }
}

export default Comment;



